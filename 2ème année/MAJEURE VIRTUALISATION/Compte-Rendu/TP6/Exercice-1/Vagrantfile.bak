# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

NODES = [ 
	{:hostname => "haproxy", :ip => "192.168.33.10", :cpus => 1, :mem => 512 }, 
	{:hostname => "web1", :ip => "192.168.33.11", :cpus => 1, :mem => 512},
	{:hostname => "web2", :ip => "192.168.33.12", :cpus => 1, :mem => 512}
	]

Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"
  NODES.each do |node|
	config.vm.define node[:hostname] do |cfg|
		cfg.vm.hostname = node[:hostname]
		cfg.vm.network "private_network", ip: node[:ip]
			cfg.vm.provider "virtualbox" do |v|
				v.customize ["modifyvm", :id, "--cpus", node[:cpus] ]
				v.customize ["modifyvm", :id, "--memory", node[:mem] ]
				v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
				v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
				v.customize ["modifyvm", :id, "--name", node[:hostname] ]
			end
		end
	end
	
    config.vm.define "haproxy" do |haproxy|
	    
		haproxy.vm.provision "shell" do |s|
        ssh_pub_key = File.readlines("C:/Users/samy2/OneDrive/Bureau/MAJEURE VIRTUALISATION/SSH haproxy/public.pub").first.strip
        s.inline = <<-SHELL
          echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
        SHELL
      end
	  
		haproxy.vm.provision "shell", inline: <<-SHELL
			sudo yum update -y
			sudo yum install haproxy -y
            sudo systemctl start firewalld
            sudo firewall-cmd --permanent --zone=public --add-port=80/tcp
            sudo firewall-cmd --permanent --zone=public --add-port=22/tcp
            sudo firewall-cmd --reload
		SHELL
		
		haproxy.vm.provision "file", source: "haproxy.cfg", destination: "/tmp/haproxy.cfg"
		haproxy.vm.provision "shell", inline: <<-SHELL
			sudo rm /etc/haproxy/haproxy.cfg
			sudo mv /tmp/haproxy.cfg /etc/haproxy/haproxy.cfg
			sudo systemctl start haproxy	   
		SHELL
	end
	
	config.vm.define "web1" do |web1|
	
	    web1.vm.provision "shell" do |s|
        ssh_pub_key = File.readlines("C:/Users/samy2/OneDrive/Bureau/MAJEURE VIRTUALISATION/SSH haproxy/public.pub").first.strip
        s.inline = <<-SHELL
          echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
        SHELL
	  end
	  
		web1.vm.provision "shell", inline: <<-SHELL
			sudo yum update -y
			sudo yum install epel-release -y
			sudo yum install nginx -y
			sudo sed -i "s/80/8080/g" /etc/nginx/nginx.conf
			sudo bash -c 'echo "<html><h1>Web 1</h1><p>Vous etes actuellement sur le serveur Web numero 1</html>" > /usr/share/nginx/html/index.html'
			sudo systemctl start nginx
            sudo systemctl start firewalld
            sudo firewall-cmd --permanent --zone=internal --add-source=192.168.33.10
            sudo firewall-cmd --permanent --zone=internal --add-port=8080/tcp
            sudo firewall-cmd --permanent --zone=public --add-port=22/tcp
            sudo firewall-cmd --reload
		SHELL
    end
	
	config.vm.define "web2" do |web2|
	
	    web2.vm.provision "shell" do |s|
        ssh_pub_key = File.readlines("C:/Users/samy2/OneDrive/Bureau/MAJEURE VIRTUALISATION/SSH haproxy/public.pub").first.strip
        s.inline = <<-SHELL
          echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
        SHELL
	  end
	  
		web2.vm.provision "shell", inline: <<-SHELL
			sudo yum update -y
			sudo yum install epel-release -y
			sudo yum install nginx -y
			sudo sed -i "s/80/8080/g" /etc/nginx/nginx.conf
			sudo bash -c 'echo "<html><h1>Web 2</h1><p>Vous etes actuellement sur le serveur Web numero 2</html>" > /usr/share/nginx/html/index.html'
			sudo systemctl start nginx
            sudo systemctl start firewalld
            sudo firewall-cmd --permanent --zone=internal --add-source=192.168.33.10
            sudo firewall-cmd --permanent --zone=internal --add-port=8080/tcp
            sudo firewall-cmd --permanent --zone=public --add-port=22/tcp
            sudo firewall-cmd --reload
		SHELL
   end
end